/* @(#)65	1.3  src/tcpip/usr/lib/libisode/OACS-types.h, isodelib7, tcpip411, GOLD410 4/5/93 13:33:49 */
/*
 * COMPONENT_NAME: (ISODELIB7) ISODE Libraries, Release 7
 *
 * FUNCTIONS: free_OACS_AbortInformation free_OACS_AbortReason 
 *    free_OACS_ConnectionData free_OACS_DataTransferSyntax free_OACS_PAccept 
 *    free_OACS_PConnect free_OACS_Priority free_OACS_RefuseReason 
 *    free_OACS_SessionConnectionIdentifier
 *
 * ORIGINS: 60
 *
 * FILE:	src/tcpip/usr/lib/libisode/OACS-types.h
 */

/* automatically generated by pepsy 6.0 #108 (oilers.netmgmt.austin.ibm.com), do not edit! */

#ifndef	_module_OACS_defined_
#define	_module_OACS_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#include <isode/psap.h>
#include <isode/pepsy.h>
#include <isode/pepsy/UNIV-types.h>

#include <isode/pepsy/OACS_defs.h>

#define	type_OACS_PRefuse	type_OACS_RefuseReason
#define	free_OACS_PRefuse	free_OACS_RefuseReason

#define	type_OACS_CallingSSUserReference	type_OACS_SSAPAddress
#define	free_OACS_CallingSSUserReference	free_OACS_SSAPAddress

#define	type_OACS_CommonReference	type_UNIV_UTCTime
#define	free_OACS_CommonReference	free_UNIV_UTCTime

#define	type_OACS_AdditionalReferenceInformation	type_UNIV_T61String
#define	free_OACS_AdditionalReferenceInformation	free_UNIV_T61String

#define	type_OACS_SSAPAddress	type_UNIV_T61String
#define	free_OACS_SSAPAddress	free_UNIV_T61String

struct type_OACS_PConnect {
    struct type_OACS_DataTransferSyntax *member_OACS_0;

    struct member_OACS_1 {
        integer     optionals;
#define	opt_OACS_member_OACS_1_protocolVersion (000000001)

        integer     checkpointSize;

        integer     windowSize;

        integer     dialogueMode;
#define	int_OACS_dialogueMode_monologue	0
#define	int_OACS_dialogueMode_twa	1

        struct type_OACS_ConnectionData *member_OACS_2;

        integer     applicationProtocol;

        integer     protocolVersion;
    } *pUserData;
};
#define	free_OACS_PConnect(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZPConnectOACS], &_ZOACS_mod, 1)

struct type_OACS_PAccept {
    struct type_OACS_DataTransferSyntax *member_OACS_3;

    struct member_OACS_4 {
        integer     checkpointSize;

        integer     windowsize;

        struct type_OACS_ConnectionData *member_OACS_5;
    } *pUserData;
};
#define	free_OACS_PAccept(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZPAcceptOACS], &_ZOACS_mod, 1)

struct type_OACS_DataTransferSyntax {
    integer     parm;
#define	int_OACS_DataTransferSyntax_x409	0
};
#define	free_OACS_DataTransferSyntax(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZDataTransferSyntaxOACS], &_ZOACS_mod, 1)

struct type_OACS_ConnectionData {
    int         offset;
#define	type_OACS_ConnectionData_open	1
#define	type_OACS_ConnectionData_recover	2

    union {
        PE      open;

        struct type_OACS_SessionConnectionIdentifier *recover;
    }       un;
};
#define	free_OACS_ConnectionData(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZConnectionDataOACS], &_ZOACS_mod, 1)

struct type_OACS_SessionConnectionIdentifier {
    struct type_OACS_CallingSSUserReference *element_OACS_0;

    struct type_OACS_CommonReference *element_OACS_1;

    struct type_OACS_AdditionalReferenceInformation *element_OACS_2;
};
#define	free_OACS_SessionConnectionIdentifier(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZSessionConnectionIdentifierOACS], &_ZOACS_mod, 1)

struct type_OACS_RefuseReason {
    integer     parm;
#define	int_OACS_RefuseReason_busy	0
#define	int_OACS_RefuseReason_cannotRecover	1
#define	int_OACS_RefuseReason_validationFailure	2
#define	int_OACS_RefuseReason_unacceptableDialogueMode	3
};
#define	free_OACS_RefuseReason(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZRefuseReasonOACS], &_ZOACS_mod, 1)

struct type_OACS_AbortInformation {
    struct type_OACS_AbortReason *member_OACS_6;

    PE      reflectedParameter;
};
#define	free_OACS_AbortInformation(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZAbortInformationOACS], &_ZOACS_mod, 1)

struct type_OACS_AbortReason {
    integer     parm;
#define	int_OACS_AbortReason_localSystemProblem	0
#define	int_OACS_AbortReason_invalidParameter	1
#define	int_OACS_AbortReason_unrecognizedActivity	2
#define	int_OACS_AbortReason_temporaryProblem	3
#define	int_OACS_AbortReason_protocolError	4
};
#define	free_OACS_AbortReason(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZAbortReasonOACS], &_ZOACS_mod, 1)

struct type_OACS_Priority {
    integer     parm;
};
#define	free_OACS_Priority(parm)\
	(void) fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZPriorityOACS], &_ZOACS_mod, 1)
#endif
